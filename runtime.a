;; Thaddeus Runtime
;; A Little Smalltalk system
;; Copyright (c) Randall Bohn 2019
;; 2019 0713
;; MIT License: see LICENCE for terms 

	!to "runtime.bin", plain
;; $ acme runtime.a

	* = $1000
	Nil = $EFF0

bootArray:
	!word FIN-$1000		;; size
	!word $C00A		;; Array
	!word Runtime
	!word rtBoot
!zone rtboot {
rtBoot:
	!word $0007		;; size
	!word $C00D		;; Method
	!word .name
	!word .code
	!word .literals
	!word $0010		;; stack size
	!word $0008		;; 8 temps
	!word Runtime		;; class
	!word Nil		;; text
.name
	!word $8006
	!word $C010		;; String
	!raw "rtboot"
.code
	!word $8020
	!word $C00B		;; BinaryArray
	!hex 4291F5		;; Identify
	!hex 4046458394		;; test #fill:with:
	!hex 50488270
	!hex 3097F5		;; update 'lcd'
	!hex 4B9AF5

	!hex 3052D218		;; get msg offset
	!hex 49D20A		;; add $20
	!hex 3052D205		;; update arg[1]
	!hex 3097F5		;; update 'lcd'
	!hex 4B9AF5

	!hex 3052D21849D20A
	!hex 3052D2053097F5
	!hex 4B9AF5

	!hex 3052D21849D20A
	!hex 3052D2053097F5
	!hex 4B9AF5

	!hex 3052D21849D20A
	!hex 3052D2053097F5
	!hex 4B9AF5

	!hex 483052D205		;; back to start
	!hex F60C00

	!hex 50D140		;; halt
	!hex F1
	!align 1,0
.literals
	!word $0008
	!word $C00A		;; Array
	!word Runtime
	!word putString
	!word .psargs
	!word stars		;; Method #stars
	!word fill_with		;; Method #fill:with:
	!word $002D		;; '-'
	!word $0050		;; row 1
	!word lcd_at		;; Method lcd:at:
	!word messages		;; 48
	!word $0020
	!word ticker		;; 4A
	!word .targs		;; 4B
.psargs
	!word $0003
	!word $C00A
	!word Runtime
	!word pztag
	!word $0000
.targs
	!word $0002
	!word $C00A
	!word Runtime
	!word $0200
}

!zone runtime {
Runtime:
	!word $0005
	!word $C000		;; Class
	!word .name
	!word Runtime		;; parent is Runtime
	!word .methods
	!word $0010		;; size
	!word .variables
.name
	!word $8009
	!word $C010
	!raw "Runtime"
	!align 1,0
.methods
	!word $0005
	!word $C00A
	!word Runtime
	!word rtBoot
	!word putString
	!word fill_with
	!word stars
.variables
	!word $0003
	!word $C00A
	!word rtStrings
	!word Nil
	!word Nil
}

!zone putString {
putString:			;; [runtime string offset] print string at screen[offset]
	!word $0007
	!word $C00D
	!word .name
	!word .code
	!word .literals
	!word $0010	;stackSize
	!word $0000	;tempSize
	!word Runtime
	!word Nil	;no text
.name
	!word $8009
	!word $C010
	!raw "putString"
	!align 1,0
.literals
	!word $0001
	!word $C00A
	!word $8000	;screen initial offset
.code
	!word $8010
	!word $C00B
	!hex 21D10451	;i(dbank count)
	!hex 4022D20A	;add offset to screen base i(dest dbank count)
	!hex 50		;i(sbank dest dbank count)
	!hex 2154D20A	;string[data] i(src sbank dest dbank count)
	!hex D530	;blit i()
	!hex F1		;return self
	!align 1,0
}

pztag:
	!word $0018
	!word $C010
	!raw "Pluton/0 65816 Computer  "
rtStrings:
	!word $0002
	!word $C00A
	!word Nil
	!word Nil

!zone fill {
fill_with: ;; [offset char]
	!word $0007
	!word $C00D
	!word .name
	!word .code
	!word .literals
	!word $0010
	!word $0002
	!word Runtime
	!word Nil
.name
	!word $000A
	!word $C010
	!raw "fill:with:"
.literals
	!word $0005
	!word $C00A
	!word Runtime
	!word putString
	!word $7000
	!word $0050
	!word .blankRow
	!word $8000
.code
	!word $8000+.cfin-.code-4
	!word $C00B
	!hex 44			;; i(blankRow)
	!hex 44D102		;; i(String blankRow)
	!hex D217		;; <stringClone string class>
	!hex 71			;; t1=new String
	!hex 5170		;; t0=1
.loop
	!hex 223130D316F5	;; fill s[t0]
	!hex 5130D20A70		;; t0+=1
	!hex 4330D201		;; t0==lit[3]?
	!hex F8
	!word .loop-.code-4
	!hex 223130D316F5	;; fill s[lit[3]] (final char)
	!hex 31D10451		;; i(dbank count)
	!hex 4521D20A		;; i(dest dbank count)
	!hex 503154D20A		;; i(src sbank dest dbank count)
	!hex D130	;; <blit count dbank dest sbank src>
	!hex F1
.cfin
	!align 1,0
.blankRow
	!word $8050
	!word $C010
	!fill $50,$20
}

!zone stars {
stars:
	!word $0007
	!word $C00D
	!word .name
	!word .code
	!word .literals
	!word $0010	;stackSize
	!word $0000	;tempSize
	!word Runtime
	!word Nil	;no text
.name
	!word $0005
	!word $C010
	!raw "stars"
.literals
	!word $0004
	!word $C00A
	!word Runtime
	!word putString
	!word .psa
	!word .psb
.code
	!word $0007
	!word $C00D
	!hex 42914391	;; putString(.psa); putString(.psb);
	!hex F60000	;; loop forever
	!align 1,0
.psa
	!word $0003
	!word $C00A
	!word Runtime
	!word .A
	!word $0024
.psb
	!word $0003
	!word $C00A
	!word Runtime
	!word .B
	!word $0024
.A
	!word $0008
	!word $C010
	!raw "=*=*=*=*"
.B
	!word $0008
	!word $C010
	!raw "*-*-*-*-"
}
!zone mktg {
lcd_at: 		;; [source dest] lcd: str at: offset
	!word $0007
	!word $C00D
	!word .name
	!word .code
	!word .literals
	!word $0010
	!word $0000
	!word Runtime
	!word Nil
.name:
	!word $0006
	!word $C010
	!raw "lcd_out"
	!align 1,0
.literals
	!word $0008
	!word $C00A
	!word Runtime
	!word $0020
	!word $8000+$0050*3+$0010
	!word $0000
	!word $0000
	!word $0000
	!word $0050
.code
	!word $0020
	!word $C00B
			;; line 0
	!hex 415142	;; i(dest dbank count)
	!hex 5021	;; i(src sbank dest dbank count)
	!hex D530	;; <blit ...>

	!hex 41514246	;; line 1
	!hex D20A
	!hex 502141
	!hex D20A
	!hex D530

	!hex 415142	;; line 2
	!hex 46D20A
	!hex 46D20A
	!hex 5021
	!hex 41D20A
	!hex 41D20A
	!hex D530

	!hex 415142	;; line 3
	!hex 46D20A
	!hex 46D20A
	!hex 46D20A
	!hex 5021
	!hex 41D20A
	!hex 41D20A
	!hex 41D20A
	!hex D530
	!hex F1
}

!zone ticker {
ticker:
	!word $0007
	!word $C00D
	!word .name
	!word .code
	!word .literals
	!word $0010
	!word $0000
	!word Runtime
	!word Nil
.name
	!word $8007
	!word $C010
	!raw "ticker:"
	!align 1,0
.literals
	!word $0001
	!word $C00A
	!word $FFFF
.code
	!word $800C
	!word $C00B
	!hex 2140D20A
	!hex F450D201
	!hex F80100
	!hex F1
}

	* = $1400
messages:
	!raw "................................"
	!raw "65816 Processor 4MHz ..........."
	!raw "2048 KB RAM ...................."
	!raw "4K ROM Monitor/Smalltalk ......."
	!raw "6845 Screen 80x24 Monochrome ..."
	!raw "2x Serial Ports 6551 ..........."
	!raw "1x VIA6522 ....................."
	!raw "1x AY3-8910 Audio .............."

FIN:	!word $FFFF
